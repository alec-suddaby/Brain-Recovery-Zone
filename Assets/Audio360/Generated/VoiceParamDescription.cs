// Copyright (c) 2018-present, Facebook, Inc. 
// @generated
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TBE {

public class VoiceParamDescription : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VoiceParamDescription(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(VoiceParamDescription obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VoiceParamDescription() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Audio360CSharpPINVOKE.delete_VoiceParamDescription(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public float min {
    set {
      Audio360CSharpPINVOKE.VoiceParamDescription_min_set(swigCPtr, value);
    } 
    get {
      float ret = Audio360CSharpPINVOKE.VoiceParamDescription_min_get(swigCPtr);
      return ret;
    } 
  }

  public float max {
    set {
      Audio360CSharpPINVOKE.VoiceParamDescription_max_set(swigCPtr, value);
    } 
    get {
      float ret = Audio360CSharpPINVOKE.VoiceParamDescription_max_get(swigCPtr);
      return ret;
    } 
  }

  public float defaultValue {
    set {
      Audio360CSharpPINVOKE.VoiceParamDescription_defaultValue_set(swigCPtr, value);
    } 
    get {
      float ret = Audio360CSharpPINVOKE.VoiceParamDescription_defaultValue_get(swigCPtr);
      return ret;
    } 
  }

  public float stepSize {
    set {
      Audio360CSharpPINVOKE.VoiceParamDescription_stepSize_set(swigCPtr, value);
    } 
    get {
      float ret = Audio360CSharpPINVOKE.VoiceParamDescription_stepSize_get(swigCPtr);
      return ret;
    } 
  }

  public VoiceParamDescription() : this(Audio360CSharpPINVOKE.new_VoiceParamDescription(), true) {
  }

}

}
