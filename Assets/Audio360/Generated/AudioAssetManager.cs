// Copyright (c) 2018-present, Facebook, Inc. 
// @generated
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TBE {

public class AudioAssetManager : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AudioAssetManager(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(AudioAssetManager obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AudioAssetManager() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Audio360CSharpPINVOKE.delete_AudioAssetManager(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual EngineError loadAudio(AudioAssetHandle handle, string fileNameAndPath, AssetDescriptor ad, AssetAccessMode mode) {
    EngineError ret = (EngineError)Audio360CSharpPINVOKE.AudioAssetManager_loadAudio(swigCPtr, AudioAssetHandle.getCPtr(handle), fileNameAndPath, AssetDescriptor.getCPtr(ad), (int)mode);
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IOStream getNewStream(AudioAssetHandle handle) {
    global::System.IntPtr cPtr = Audio360CSharpPINVOKE.AudioAssetManager_getNewStream(swigCPtr, AudioAssetHandle.getCPtr(handle));
    IOStream ret = (cPtr == global::System.IntPtr.Zero) ? null : new IOStream(cPtr, false);
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual AudioFormatDecoder getNewDecoder(AudioAssetHandle handle, int bufferSize, float sampleRate) {
    global::System.IntPtr cPtr = Audio360CSharpPINVOKE.AudioAssetManager_getNewDecoder(swigCPtr, AudioAssetHandle.getCPtr(handle), bufferSize, sampleRate);
    AudioFormatDecoder ret = (cPtr == global::System.IntPtr.Zero) ? null : new AudioFormatDecoder(cPtr, false);
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool unloadAudio(AudioAssetHandle handle) {
    bool ret = Audio360CSharpPINVOKE.AudioAssetManager_unloadAudio(swigCPtr, AudioAssetHandle.getCPtr(handle));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual AssetAccessMode getMode(AudioAssetHandle handle) {
    AssetAccessMode ret = (AssetAccessMode)Audio360CSharpPINVOKE.AudioAssetManager_getMode(swigCPtr, AudioAssetHandle.getCPtr(handle));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string getFormat(AudioAssetHandle handle) {
    string ret = Audio360CSharpPINVOKE.AudioAssetManager_getFormat(swigCPtr, AudioAssetHandle.getCPtr(handle));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual uint getBytesInMemory() {
    uint ret = Audio360CSharpPINVOKE.AudioAssetManager_getBytesInMemory(swigCPtr);
    return ret;
  }

}

}
